#! @bash@

usage() {
    read -r -d '' usage << EOF
Replace an executable with a wrapped variant
wrapProgram <PROGRAM> ARGS

ARGS:
--argv0       NAME    : set name of executed process to NAME
                        (otherwise it’s called …-wrapped)
--set         VAR VAL : add VAR with value VAL to the executable’s
                        environment
--set-default VAR VAL : like --set, but only adds VAR if not already set in
                        the environment
--unset       VAR     : remove VAR from the environment
--run         COMMAND : run command before the executable
--add-flags   FLAGS   : add FLAGS to invocation of executable

--prefix          ENV SEP VAL   : suffix/prefix ENV with VAL, separated by SEP
--suffix
--prefix-each     ENV SEP VALS  : like --prefix, but VALS is a list
--suffix-each     ENV SEP VALS  : like --suffix, but VALS is a list
--prefix-contents ENV SEP FILES : like --suffix-each, but contents of FILES
                                  are read first and used as VALS
--suffix-contents
EOF

    echo "$usage" >&2
}

make_wrapper_shell=${make_wrapper_shell:-@bash@}

source @out@/scripts/die.sh
source @mkwrapper-extract@/scripts/make-wrapper.sh

if [[ $# -lt 1 ]]
then
    usage
    exit 1
fi

wrapProgram $@